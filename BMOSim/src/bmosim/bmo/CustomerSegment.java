package bmosim.bmo;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: CustomerSegment <br>
 * @version generated on Thu Oct 26 02:05:01 WAT 2017 by Hichem
 */

public interface CustomerSegment extends BMElement {

    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#isServedBy
     */
     
    /**
     * Gets all property values for the isServedBy property.<p>
     * 
     * @returns a collection of values for the isServedBy property.
     */
    Collection<? extends DistributionChannel> getIsServedBy();

    /**
     * Checks if the class has a isServedBy property value.<p>
     * 
     * @return true if there is a isServedBy property value.
     */
    boolean hasIsServedBy();

    /**
     * Adds a isServedBy property value.<p>
     * 
     * @param newIsServedBy the isServedBy property value to be added
     */
    void addIsServedBy(DistributionChannel newIsServedBy);

    /**
     * Removes a isServedBy property value.<p>
     * 
     * @param oldIsServedBy the isServedBy property value to be removed.
     */
    void removeIsServedBy(DistributionChannel oldIsServedBy);


    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#isTargetedBy
     */
     
    /**
     * Gets all property values for the isTargetedBy property.<p>
     * 
     * @returns a collection of values for the isTargetedBy property.
     */
    Collection<? extends ValueProposition> getIsTargetedBy();

    /**
     * Checks if the class has a isTargetedBy property value.<p>
     * 
     * @return true if there is a isTargetedBy property value.
     */
    boolean hasIsTargetedBy();

    /**
     * Adds a isTargetedBy property value.<p>
     * 
     * @param newIsTargetedBy the isTargetedBy property value to be added
     */
    void addIsTargetedBy(ValueProposition newIsTargetedBy);

    /**
     * Removes a isTargetedBy property value.<p>
     * 
     * @param oldIsTargetedBy the isTargetedBy property value to be removed.
     */
    void removeIsTargetedBy(ValueProposition oldIsTargetedBy);


    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#criterion
     */
     
    /**
     * Gets all property values for the criterion property.<p>
     * 
     * @returns a collection of values for the criterion property.
     */
    Collection<? extends String> getCriterion();

    /**
     * Checks if the class has a criterion property value.<p>
     * 
     * @return true if there is a criterion property value.
     */
    boolean hasCriterion();

    /**
     * Adds a criterion property value.<p>
     * 
     * @param newCriterion the criterion property value to be added
     */
    void addCriterion(String newCriterion);

    /**
     * Removes a criterion property value.<p>
     * 
     * @param oldCriterion the criterion property value to be removed.
     */
    void removeCriterion(String oldCriterion);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#reasoning
     */
     
    /**
     * Gets all property values for the reasoning property.<p>
     * 
     * @returns a collection of values for the reasoning property.
     */
    Collection<? extends String> getReasoning();

    /**
     * Checks if the class has a reasoning property value.<p>
     * 
     * @return true if there is a reasoning property value.
     */
    boolean hasReasoning();

    /**
     * Adds a reasoning property value.<p>
     * 
     * @param newReasoning the reasoning property value to be added
     */
    void addReasoning(String newReasoning);

    /**
     * Removes a reasoning property value.<p>
     * 
     * @param oldReasoning the reasoning property value to be removed.
     */
    void removeReasoning(String oldReasoning);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#synonyms
     */
     
    /**
     * Gets all property values for the synonyms property.<p>
     * 
     * @returns a collection of values for the synonyms property.
     */
    Collection<? extends String> getSynonyms();

    /**
     * Checks if the class has a synonyms property value.<p>
     * 
     * @return true if there is a synonyms property value.
     */
    boolean hasSynonyms();

    /**
     * Adds a synonyms property value.<p>
     * 
     * @param newSynonyms the synonyms property value to be added
     */
    void addSynonyms(String newSynonyms);

    /**
     * Removes a synonyms property value.<p>
     * 
     * @param oldSynonyms the synonyms property value to be removed.
     */
    void removeSynonyms(String oldSynonyms);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
