package bmosim.bmo;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: ValueProposition <br>
 * @version generated on Thu Oct 26 02:05:01 WAT 2017 by Hichem
 */

public interface ValueProposition extends BMElement {

    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#isDeliveredBy
     */
     
    /**
     * Gets all property values for the isDeliveredBy property.<p>
     * 
     * @returns a collection of values for the isDeliveredBy property.
     */
    Collection<? extends DistributionChannel> getIsDeliveredBy();

    /**
     * Checks if the class has a isDeliveredBy property value.<p>
     * 
     * @return true if there is a isDeliveredBy property value.
     */
    boolean hasIsDeliveredBy();

    /**
     * Adds a isDeliveredBy property value.<p>
     * 
     * @param newIsDeliveredBy the isDeliveredBy property value to be added
     */
    void addIsDeliveredBy(DistributionChannel newIsDeliveredBy);

    /**
     * Removes a isDeliveredBy property value.<p>
     * 
     * @param oldIsDeliveredBy the isDeliveredBy property value to be removed.
     */
    void removeIsDeliveredBy(DistributionChannel oldIsDeliveredBy);


    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#isImplementedBy
     */
     
    /**
     * Gets all property values for the isImplementedBy property.<p>
     * 
     * @returns a collection of values for the isImplementedBy property.
     */
    Collection<? extends ValueConfiguration> getIsImplementedBy();

    /**
     * Checks if the class has a isImplementedBy property value.<p>
     * 
     * @return true if there is a isImplementedBy property value.
     */
    boolean hasIsImplementedBy();

    /**
     * Adds a isImplementedBy property value.<p>
     * 
     * @param newIsImplementedBy the isImplementedBy property value to be added
     */
    void addIsImplementedBy(ValueConfiguration newIsImplementedBy);

    /**
     * Removes a isImplementedBy property value.<p>
     * 
     * @param oldIsImplementedBy the isImplementedBy property value to be removed.
     */
    void removeIsImplementedBy(ValueConfiguration oldIsImplementedBy);


    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#requires
     */
     
    /**
     * Gets all property values for the requires property.<p>
     * 
     * @returns a collection of values for the requires property.
     */
    Collection<? extends Resource> getRequires();

    /**
     * Checks if the class has a requires property value.<p>
     * 
     * @return true if there is a requires property value.
     */
    boolean hasRequires();

    /**
     * Adds a requires property value.<p>
     * 
     * @param newRequires the requires property value to be added
     */
    void addRequires(Resource newRequires);

    /**
     * Removes a requires property value.<p>
     * 
     * @param oldRequires the requires property value to be removed.
     */
    void removeRequires(Resource oldRequires);


    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#targets
     */
     
    /**
     * Gets all property values for the targets property.<p>
     * 
     * @returns a collection of values for the targets property.
     */
    Collection<? extends CustomerSegment> getTargets();

    /**
     * Checks if the class has a targets property value.<p>
     * 
     * @return true if there is a targets property value.
     */
    boolean hasTargets();

    /**
     * Adds a targets property value.<p>
     * 
     * @param newTargets the targets property value to be added
     */
    void addTargets(CustomerSegment newTargets);

    /**
     * Removes a targets property value.<p>
     * 
     * @param oldTargets the targets property value to be removed.
     */
    void removeTargets(CustomerSegment oldTargets);


    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#lifeCycle
     */
     
    /**
     * Gets all property values for the lifeCycle property.<p>
     * 
     * @returns a collection of values for the lifeCycle property.
     */
    Collection<? extends Object> getLifeCycle();

    /**
     * Checks if the class has a lifeCycle property value.<p>
     * 
     * @return true if there is a lifeCycle property value.
     */
    boolean hasLifeCycle();

    /**
     * Adds a lifeCycle property value.<p>
     * 
     * @param newLifeCycle the lifeCycle property value to be added
     */
    void addLifeCycle(Object newLifeCycle);

    /**
     * Removes a lifeCycle property value.<p>
     * 
     * @param oldLifeCycle the lifeCycle property value to be removed.
     */
    void removeLifeCycle(Object oldLifeCycle);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#lifeCycleComments
     */
     
    /**
     * Gets all property values for the lifeCycleComments property.<p>
     * 
     * @returns a collection of values for the lifeCycleComments property.
     */
    Collection<? extends String> getLifeCycleComments();

    /**
     * Checks if the class has a lifeCycleComments property value.<p>
     * 
     * @return true if there is a lifeCycleComments property value.
     */
    boolean hasLifeCycleComments();

    /**
     * Adds a lifeCycleComments property value.<p>
     * 
     * @param newLifeCycleComments the lifeCycleComments property value to be added
     */
    void addLifeCycleComments(String newLifeCycleComments);

    /**
     * Removes a lifeCycleComments property value.<p>
     * 
     * @param oldLifeCycleComments the lifeCycleComments property value to be removed.
     */
    void removeLifeCycleComments(String oldLifeCycleComments);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#priceLevel
     */
     
    /**
     * Gets all property values for the priceLevel property.<p>
     * 
     * @returns a collection of values for the priceLevel property.
     */
    Collection<? extends Object> getPriceLevel();

    /**
     * Checks if the class has a priceLevel property value.<p>
     * 
     * @return true if there is a priceLevel property value.
     */
    boolean hasPriceLevel();

    /**
     * Adds a priceLevel property value.<p>
     * 
     * @param newPriceLevel the priceLevel property value to be added
     */
    void addPriceLevel(Object newPriceLevel);

    /**
     * Removes a priceLevel property value.<p>
     * 
     * @param oldPriceLevel the priceLevel property value to be removed.
     */
    void removePriceLevel(Object oldPriceLevel);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#priceLevelComments
     */
     
    /**
     * Gets all property values for the priceLevelComments property.<p>
     * 
     * @returns a collection of values for the priceLevelComments property.
     */
    Collection<? extends String> getPriceLevelComments();

    /**
     * Checks if the class has a priceLevelComments property value.<p>
     * 
     * @return true if there is a priceLevelComments property value.
     */
    boolean hasPriceLevelComments();

    /**
     * Adds a priceLevelComments property value.<p>
     * 
     * @param newPriceLevelComments the priceLevelComments property value to be added
     */
    void addPriceLevelComments(String newPriceLevelComments);

    /**
     * Removes a priceLevelComments property value.<p>
     * 
     * @param oldPriceLevelComments the priceLevelComments property value to be removed.
     */
    void removePriceLevelComments(String oldPriceLevelComments);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#reasoning
     */
     
    /**
     * Gets all property values for the reasoning property.<p>
     * 
     * @returns a collection of values for the reasoning property.
     */
    Collection<? extends String> getReasoning();

    /**
     * Checks if the class has a reasoning property value.<p>
     * 
     * @return true if there is a reasoning property value.
     */
    boolean hasReasoning();

    /**
     * Adds a reasoning property value.<p>
     * 
     * @param newReasoning the reasoning property value to be added
     */
    void addReasoning(String newReasoning);

    /**
     * Removes a reasoning property value.<p>
     * 
     * @param oldReasoning the reasoning property value to be removed.
     */
    void removeReasoning(String oldReasoning);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#synonyms
     */
     
    /**
     * Gets all property values for the synonyms property.<p>
     * 
     * @returns a collection of values for the synonyms property.
     */
    Collection<? extends String> getSynonyms();

    /**
     * Checks if the class has a synonyms property value.<p>
     * 
     * @return true if there is a synonyms property value.
     */
    boolean hasSynonyms();

    /**
     * Adds a synonyms property value.<p>
     * 
     * @param newSynonyms the synonyms property value to be added
     */
    void addSynonyms(String newSynonyms);

    /**
     * Removes a synonyms property value.<p>
     * 
     * @param oldSynonyms the synonyms property value to be removed.
     */
    void removeSynonyms(String oldSynonyms);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#valueLevel
     */
     
    /**
     * Gets all property values for the valueLevel property.<p>
     * 
     * @returns a collection of values for the valueLevel property.
     */
    Collection<? extends Object> getValueLevel();

    /**
     * Checks if the class has a valueLevel property value.<p>
     * 
     * @return true if there is a valueLevel property value.
     */
    boolean hasValueLevel();

    /**
     * Adds a valueLevel property value.<p>
     * 
     * @param newValueLevel the valueLevel property value to be added
     */
    void addValueLevel(Object newValueLevel);

    /**
     * Removes a valueLevel property value.<p>
     * 
     * @param oldValueLevel the valueLevel property value to be removed.
     */
    void removeValueLevel(Object oldValueLevel);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#valueLevelComments
     */
     
    /**
     * Gets all property values for the valueLevelComments property.<p>
     * 
     * @returns a collection of values for the valueLevelComments property.
     */
    Collection<? extends String> getValueLevelComments();

    /**
     * Checks if the class has a valueLevelComments property value.<p>
     * 
     * @return true if there is a valueLevelComments property value.
     */
    boolean hasValueLevelComments();

    /**
     * Adds a valueLevelComments property value.<p>
     * 
     * @param newValueLevelComments the valueLevelComments property value to be added
     */
    void addValueLevelComments(String newValueLevelComments);

    /**
     * Removes a valueLevelComments property value.<p>
     * 
     * @param oldValueLevelComments the valueLevelComments property value to be removed.
     */
    void removeValueLevelComments(String oldValueLevelComments);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
