package bmosim.bmo;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: ValueNetworkActivity <br>
 * @version generated on Thu Oct 26 02:05:01 WAT 2017 by Hichem
 */

public interface ValueNetworkActivity extends Activity {

    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#creates
     */
     
    /**
     * Gets all property values for the creates property.<p>
     * 
     * @returns a collection of values for the creates property.
     */
    Collection<? extends Resource> getCreates();

    /**
     * Checks if the class has a creates property value.<p>
     * 
     * @return true if there is a creates property value.
     */
    boolean hasCreates();

    /**
     * Adds a creates property value.<p>
     * 
     * @param newCreates the creates property value to be added
     */
    void addCreates(Resource newCreates);

    /**
     * Removes a creates property value.<p>
     * 
     * @param oldCreates the creates property value to be removed.
     */
    void removeCreates(Resource oldCreates);


    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#implements
     */
     
    /**
     * Gets all property values for the implements property.<p>
     * 
     * @returns a collection of values for the implements property.
     */
    Collection<? extends ValueProposition> getImplements();

    /**
     * Checks if the class has a implements property value.<p>
     * 
     * @return true if there is a implements property value.
     */
    boolean hasImplements();

    /**
     * Adds a implements property value.<p>
     * 
     * @param newImplements the implements property value to be added
     */
    void addImplements(ValueProposition newImplements);

    /**
     * Removes a implements property value.<p>
     * 
     * @param oldImplements the implements property value to be removed.
     */
    void removeImplements(ValueProposition oldImplements);


    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#needs
     */
     
    /**
     * Gets all property values for the needs property.<p>
     * 
     * @returns a collection of values for the needs property.
     */
    Collection<? extends Resource> getNeeds();

    /**
     * Checks if the class has a needs property value.<p>
     * 
     * @return true if there is a needs property value.
     */
    boolean hasNeeds();

    /**
     * Adds a needs property value.<p>
     * 
     * @param newNeeds the needs property value to be added
     */
    void addNeeds(Resource newNeeds);

    /**
     * Removes a needs property value.<p>
     * 
     * @param oldNeeds the needs property value to be removed.
     */
    void removeNeeds(Resource oldNeeds);


    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#ActivityLevel
     */
     
    /**
     * Gets all property values for the ActivityLevel property.<p>
     * 
     * @returns a collection of values for the ActivityLevel property.
     */
    Collection<? extends Object> getActivityLevel();

    /**
     * Checks if the class has a ActivityLevel property value.<p>
     * 
     * @return true if there is a ActivityLevel property value.
     */
    boolean hasActivityLevel();

    /**
     * Adds a ActivityLevel property value.<p>
     * 
     * @param newActivityLevel the ActivityLevel property value to be added
     */
    void addActivityLevel(Object newActivityLevel);

    /**
     * Removes a ActivityLevel property value.<p>
     * 
     * @param oldActivityLevel the ActivityLevel property value to be removed.
     */
    void removeActivityLevel(Object oldActivityLevel);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#reasoning
     */
     
    /**
     * Gets all property values for the reasoning property.<p>
     * 
     * @returns a collection of values for the reasoning property.
     */
    Collection<? extends String> getReasoning();

    /**
     * Checks if the class has a reasoning property value.<p>
     * 
     * @return true if there is a reasoning property value.
     */
    boolean hasReasoning();

    /**
     * Adds a reasoning property value.<p>
     * 
     * @param newReasoning the reasoning property value to be added
     */
    void addReasoning(String newReasoning);

    /**
     * Removes a reasoning property value.<p>
     * 
     * @param oldReasoning the reasoning property value to be removed.
     */
    void removeReasoning(String oldReasoning);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#synonyms
     */
     
    /**
     * Gets all property values for the synonyms property.<p>
     * 
     * @returns a collection of values for the synonyms property.
     */
    Collection<? extends String> getSynonyms();

    /**
     * Checks if the class has a synonyms property value.<p>
     * 
     * @return true if there is a synonyms property value.
     */
    boolean hasSynonyms();

    /**
     * Adds a synonyms property value.<p>
     * 
     * @param newSynonyms the synonyms property value to be added
     */
    void addSynonyms(String newSynonyms);

    /**
     * Removes a synonyms property value.<p>
     * 
     * @param oldSynonyms the synonyms property value to be removed.
     */
    void removeSynonyms(String oldSynonyms);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/unnamed.owl#valueNetworkActivityNature
     */
     
    /**
     * Gets all property values for the valueNetworkActivityNature property.<p>
     * 
     * @returns a collection of values for the valueNetworkActivityNature property.
     */
    Collection<? extends Object> getValueNetworkActivityNature();

    /**
     * Checks if the class has a valueNetworkActivityNature property value.<p>
     * 
     * @return true if there is a valueNetworkActivityNature property value.
     */
    boolean hasValueNetworkActivityNature();

    /**
     * Adds a valueNetworkActivityNature property value.<p>
     * 
     * @param newValueNetworkActivityNature the valueNetworkActivityNature property value to be added
     */
    void addValueNetworkActivityNature(Object newValueNetworkActivityNature);

    /**
     * Removes a valueNetworkActivityNature property value.<p>
     * 
     * @param oldValueNetworkActivityNature the valueNetworkActivityNature property value to be removed.
     */
    void removeValueNetworkActivityNature(Object oldValueNetworkActivityNature);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
